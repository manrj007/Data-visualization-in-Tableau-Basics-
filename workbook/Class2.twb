<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='matches' inline='true' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='matches' name='textscan.0pc6hrm07k4j1p17fhkwu12js2ov'>
            <connection class='textscan' directory='E:/College/Data Sets_In Class/Exercise' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0pc6hrm07k4j1p17fhkwu12js2ov' name='matches.csv' table='[matches#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='string' name='team1' ordinal='4' />
            <column datatype='string' name='team2' ordinal='5' />
            <column datatype='string' name='toss_winner' ordinal='6' />
            <column datatype='string' name='toss_decision' ordinal='7' />
            <column datatype='string' name='result' ordinal='8' />
            <column datatype='integer' name='dl_applied' ordinal='9' />
            <column datatype='string' name='winner' ordinal='10' />
            <column datatype='integer' name='win_by_runs' ordinal='11' />
            <column datatype='integer' name='win_by_wickets' ordinal='12' />
            <column datatype='string' name='player_of_match' ordinal='13' />
            <column datatype='string' name='venue' ordinal='14' />
            <column datatype='string' name='umpire1' ordinal='15' />
            <column datatype='string' name='umpire2' ordinal='16' />
            <column datatype='string' name='umpire3' ordinal='17' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Win By Wickets (bin)' datatype='integer' name='[Win By Wickets (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[win_by_wickets]' peg='0' size='1' />
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.674663' measure-ordering='alphabetic' measure-percentage='0.325337' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:team1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='How many times CSK has won'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' />
          </datasources>
          <datasource-dependencies datasource='federated.1i6qo3m1gtdonh11eq6m01hlkhyr'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]' direction='DESC' using='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[sum:Number of Records:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[sum:Number of Records:qk]</rows>
        <cols>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='How many wickets win'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' />
          </datasources>
          <datasource-dependencies datasource='federated.1i6qo3m1gtdonh11eq6m01hlkhyr'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Win By Wickets (bin)' datatype='integer' name='[Win By Wickets (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[win_by_wickets]' peg='0' size='1' />
            </column>
            <column-instance column='[Win By Wickets (bin)]' derivation='None' name='[none:Win By Wickets (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[team1]' derivation='None' name='[none:team1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:Win By Wickets (bin):ok] * [federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[sum:Number of Records:qk])</rows>
        <cols>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:team1:nk]</cols>
        <show-full-range>
          <column>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[Win By Wickets (bin) 2]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Relation bt'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' />
          </datasources>
          <datasource-dependencies datasource='federated.1i6qo3m1gtdonh11eq6m01hlkhyr'>
            <column-instance column='[win_by_runs]' derivation='Avg' name='[avg:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Avg' name='[avg:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:venue:nk]'>
            <groupfilter from='&quot;Barabati Stadium&quot;' function='range' level='[none:venue:nk]' to='&quot;Wankhede Stadium&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:venue:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:venue:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[avg:win_by_wickets:qk]</rows>
        <cols>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[avg:win_by_runs:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Season and win by runs'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' />
          </datasources>
          <datasource-dependencies datasource='federated.1i6qo3m1gtdonh11eq6m01hlkhyr'>
            <column-instance column='[season]' derivation='None' name='[none:season:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Season' datatype='integer' name='[season]' role='dimension' type='ordinal' />
            <column-instance column='[win_by_runs]' derivation='Sum' name='[sum:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[sum:win_by_runs:qk]</rows>
        <cols>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:season:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' />
          </datasources>
          <datasource-dependencies datasource='federated.1i6qo3m1gtdonh11eq6m01hlkhyr'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[toss_decision]' derivation='None' name='[none:toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
              <groupfilter from='&quot;Chennai Super Kings&quot;' function='range' level='[none:winner:nk]' to='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk] / [federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:toss_decision:nk])</rows>
        <cols>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='coastal cities'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='matches' name='federated.1i6qo3m1gtdonh11eq6m01hlkhyr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1i6qo3m1gtdonh11eq6m01hlkhyr'>
            <column-instance column='[win_by_wickets]' derivation='Avg' name='[avg:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[Longitude (generated)]' field-type='quantitative' max='11503766.146721996' min='-1150844.1910757804' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[Latitude (generated)]' field-type='quantitative' max='4003438.9418520988' min='-3798335.6611592723' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[avg:win_by_wickets:qk]' />
              <lod column='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[Latitude (generated)]</rows>
        <cols>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='How many times CSK has won'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:team1:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:team2:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:team1:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:toss_decision:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:toss_winner:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Relation bt'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:toss_winner:nk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:venue:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Season and win by runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[attr:season:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:team1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='coastal cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[avg:win_by_wickets:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[avg:win_by_wickets:qk]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:city:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='How many wickets win'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:Win By Wickets (bin):ok]</field>
            <field>[federated.1i6qo3m1gtdonh11eq6m01hlkhyr].[none:team1:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='How many times CSK has won' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='How many wickets win' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Relation bt' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Season and win by runs' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='coastal cities' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
